@page
@using SolucoesDefeitos.Pesentation.RazorPages.Components.DisplayTempDataMessage;
@using SolucoesDefeitos.Pesentation.RazorPages.Components.Pager;
@using SolucoesDefeitos.Pesentation.RazorPages.Components.Pager.Model;
@model SolucoesDefeitos.Pesentation.RazorPages.Pages.Manufacturer.ListModel
@{
}

@await Component.InvokeAsync(nameof(DisplayTempDataMessage))

<h2>Fabricantes</h2>
<div>
    <a class="btn btn-primary" asp-page="./Form">Novo</a>
</div>
<form asp-page="./List" method="get">
    <div>
        <p>
            Filtar por nome:
            <input type="text" name="ManufacturerNameFilter" value="@Model.ManufacturerNameFilter" />
            <input type="hidden" name="pageIndex" value="@Model.PagedData.CurrentPage" />
            <input type="submit" value="Filtrar" class="btn btn-primary" /> |
            <a asp-page="./List">Limpar filtro</a>
        </p>
    </div>
    <table class="table">
        <thead>
            <tr>
                <th scope="col" class="options-column">Ações</th>
                <th scope="col">Nome</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var manufacturer in Model.PagedData.Data)
            {
                <tr>
                    <th scope="row">
                        <div class="btn-group">
                            <button type="button" class="btn btn-outline-primary dropdown-toggle" data-bs-toggle="dropdown">
                                Opções
                            </button>
                            <ul class="dropdown-menu">
                                <li><a class="dropdown-item" asp-page="./Form" asp-route-manufacturerId="@manufacturer.ManufacturerId">Alterar</a></li>
                                <li><a class="dropdown-item" href="#" onclick="list.deleteRecord(@manufacturer.ManufacturerId)">Excluir</a></li>
                            </ul>
                        </div>
                    </th>
                    <td>@manufacturer.Name</td>
                </tr>
            }
        </tbody>
    </table>
    @await Component.InvokeAsync(nameof(Pager),
        new PagerModel {
            AdditionalParameters = new List<(string, string)>
            {
                new ("manufacturerNameFilter", Model.ManufacturerNameFilter ?? string.Empty)
            },
            CurrentPage = Model.PagedData.CurrentPage,
            PageSize = Model.PagedData.PageSize,
            Path = "/Manufacturer/List",
            TotalRecords = Model.PagedData.TotalRecords,
        })
</form>

@section Scripts {
    <script type="text/javascript" src="~/js/pages/manufacturer/list.js" asp-append-version="true"></script>
}